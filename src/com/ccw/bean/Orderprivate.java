package com.ccw.bean;

// Generated Aug 28, 2012 11:30:32 PM by Hibernate Tools 3.2.2.GA

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Orderprivate generated by hbm2java
 */
@Entity
@Table(name = "orderprivate", catalog = "ccwchina", uniqueConstraints = @UniqueConstraint(columnNames = "orderBasicId"))
public class Orderprivate implements java.io.Serializable {

	private String orderPrivateId;
	private Courselocation courselocation;
	private Coursepackage coursepackage;
	private Classtime classtime;
	private Orderbasic orderbasic;
	private Integer totalPeopleNumber;
	private Date courseDate;
	private Integer pricePerPerson;
	private String flag;
	private String avaliable;
	private Integer totalPrice;

	public Orderprivate() {
	}

	public Orderprivate(String orderPrivateId, Orderbasic orderbasic) {
		this.orderPrivateId = orderPrivateId;
		this.orderbasic = orderbasic;
	}

	public Orderprivate(String orderPrivateId, Courselocation courselocation,
			Coursepackage coursepackage, Classtime classtime,
			Orderbasic orderbasic, Integer totalPeopleNumber, Date courseDate,
			Integer pricePerPerson, String flag, String avaliable,
			Integer totalPrice) {
		this.orderPrivateId = orderPrivateId;
		this.courselocation = courselocation;
		this.coursepackage = coursepackage;
		this.classtime = classtime;
		this.orderbasic = orderbasic;
		this.totalPeopleNumber = totalPeopleNumber;
		this.courseDate = courseDate;
		this.pricePerPerson = pricePerPerson;
		this.flag = flag;
		this.avaliable = avaliable;
		this.totalPrice = totalPrice;
	}

	@Id
	@Column(name = "orderPrivateId", unique = true, nullable = false, length = 45)
	public String getOrderPrivateId() {
		return this.orderPrivateId;
	}

	public void setOrderPrivateId(String orderPrivateId) {
		this.orderPrivateId = orderPrivateId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "courseLocationId")
	public Courselocation getCourselocation() {
		return this.courselocation;
	}

	public void setCourselocation(Courselocation courselocation) {
		this.courselocation = courselocation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "coursePackageId")
	public Coursepackage getCoursepackage() {
		return this.coursepackage;
	}

	public void setCoursepackage(Coursepackage coursepackage) {
		this.coursepackage = coursepackage;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "classTimeId")
	public Classtime getClasstime() {
		return this.classtime;
	}

	public void setClasstime(Classtime classtime) {
		this.classtime = classtime;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "orderBasicId", unique = true, nullable = false)
	public Orderbasic getOrderbasic() {
		return this.orderbasic;
	}

	public void setOrderbasic(Orderbasic orderbasic) {
		this.orderbasic = orderbasic;
	}

	@Column(name = "totalPeopleNumber")
	public Integer getTotalPeopleNumber() {
		return this.totalPeopleNumber;
	}

	public void setTotalPeopleNumber(Integer totalPeopleNumber) {
		this.totalPeopleNumber = totalPeopleNumber;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "courseDate", length = 10)
	public Date getCourseDate() {
		return this.courseDate;
	}

	public void setCourseDate(Date courseDate) {
		this.courseDate = courseDate;
	}

	@Column(name = "pricePerPerson")
	public Integer getPricePerPerson() {
		return this.pricePerPerson;
	}

	public void setPricePerPerson(Integer pricePerPerson) {
		this.pricePerPerson = pricePerPerson;
	}

	@Column(name = "flag", length = 45)
	public String getFlag() {
		return this.flag;
	}

	public void setFlag(String flag) {
		this.flag = flag;
	}

	@Column(name = "avaliable", length = 45)
	public String getAvaliable() {
		return this.avaliable;
	}

	public void setAvaliable(String avaliable) {
		this.avaliable = avaliable;
	}

	@Column(name = "totalPrice")
	public Integer getTotalPrice() {
		return this.totalPrice;
	}

	public void setTotalPrice(Integer totalPrice) {
		this.totalPrice = totalPrice;
	}

}
