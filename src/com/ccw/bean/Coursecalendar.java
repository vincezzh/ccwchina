package com.ccw.bean;

// Generated Aug 28, 2012 11:30:32 PM by Hibernate Tools 3.2.2.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Coursecalendar generated by hbm2java
 */
@Entity
@Table(name = "coursecalendar", catalog = "ccwchina")
public class Coursecalendar implements java.io.Serializable {

	private String courseCalendarId;
	private Courselocation courselocation;
	private Classtime classtime;
	private Specialtype specialtype;
	private Coursebranchtype coursebranchtype;
	private Coursetrunktype coursetrunktype;
	private Date classDate;
	private Integer seatLeft;
	private Integer pricePerPerson;
	private Integer points;
	private String courseAdvise;
	private String flag;
	private String avaliable;
	private Set<Calendarwithcourse> calendarwithcourses = new HashSet<Calendarwithcourse>(
			0);
	private Set<Orderpublic> orderpublics = new HashSet<Orderpublic>(0);

	public Coursecalendar() {
	}

	public Coursecalendar(String courseCalendarId) {
		this.courseCalendarId = courseCalendarId;
	}

	public Coursecalendar(String courseCalendarId,
			Courselocation courselocation, Classtime classtime,
			Specialtype specialtype, Coursebranchtype coursebranchtype,
			Coursetrunktype coursetrunktype, Date classDate, Integer seatLeft,
			Integer pricePerPerson, Integer points, String courseAdvise,
			String flag, String avaliable,
			Set<Calendarwithcourse> calendarwithcourses,
			Set<Orderpublic> orderpublics) {
		this.courseCalendarId = courseCalendarId;
		this.courselocation = courselocation;
		this.classtime = classtime;
		this.specialtype = specialtype;
		this.coursebranchtype = coursebranchtype;
		this.coursetrunktype = coursetrunktype;
		this.classDate = classDate;
		this.seatLeft = seatLeft;
		this.pricePerPerson = pricePerPerson;
		this.points = points;
		this.courseAdvise = courseAdvise;
		this.flag = flag;
		this.avaliable = avaliable;
		this.calendarwithcourses = calendarwithcourses;
		this.orderpublics = orderpublics;
	}

	@Id
	@Column(name = "courseCalendarId", unique = true, nullable = false, length = 45)
	public String getCourseCalendarId() {
		return this.courseCalendarId;
	}

	public void setCourseCalendarId(String courseCalendarId) {
		this.courseCalendarId = courseCalendarId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "courseLocationId")
	public Courselocation getCourselocation() {
		return this.courselocation;
	}

	public void setCourselocation(Courselocation courselocation) {
		this.courselocation = courselocation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "classTimeId")
	public Classtime getClasstime() {
		return this.classtime;
	}

	public void setClasstime(Classtime classtime) {
		this.classtime = classtime;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "specialTypeId")
	public Specialtype getSpecialtype() {
		return this.specialtype;
	}

	public void setSpecialtype(Specialtype specialtype) {
		this.specialtype = specialtype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "courseBranchTypeId")
	public Coursebranchtype getCoursebranchtype() {
		return this.coursebranchtype;
	}

	public void setCoursebranchtype(Coursebranchtype coursebranchtype) {
		this.coursebranchtype = coursebranchtype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "courseTrunkTypeId")
	public Coursetrunktype getCoursetrunktype() {
		return this.coursetrunktype;
	}

	public void setCoursetrunktype(Coursetrunktype coursetrunktype) {
		this.coursetrunktype = coursetrunktype;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "classDate", length = 10)
	public Date getClassDate() {
		return this.classDate;
	}

	public void setClassDate(Date classDate) {
		this.classDate = classDate;
	}

	@Column(name = "seatLeft")
	public Integer getSeatLeft() {
		return this.seatLeft;
	}

	public void setSeatLeft(Integer seatLeft) {
		this.seatLeft = seatLeft;
	}

	@Column(name = "pricePerPerson")
	public Integer getPricePerPerson() {
		return this.pricePerPerson;
	}

	public void setPricePerPerson(Integer pricePerPerson) {
		this.pricePerPerson = pricePerPerson;
	}

	@Column(name = "points")
	public Integer getPoints() {
		return this.points;
	}

	public void setPoints(Integer points) {
		this.points = points;
	}

	@Column(name = "courseAdvise", length = 65535)
	public String getCourseAdvise() {
		return this.courseAdvise;
	}

	public void setCourseAdvise(String courseAdvise) {
		this.courseAdvise = courseAdvise;
	}

	@Column(name = "flag", length = 45)
	public String getFlag() {
		return this.flag;
	}

	public void setFlag(String flag) {
		this.flag = flag;
	}

	@Column(name = "avaliable", length = 45)
	public String getAvaliable() {
		return this.avaliable;
	}

	public void setAvaliable(String avaliable) {
		this.avaliable = avaliable;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "coursecalendar")
	public Set<Calendarwithcourse> getCalendarwithcourses() {
		return this.calendarwithcourses;
	}

	public void setCalendarwithcourses(
			Set<Calendarwithcourse> calendarwithcourses) {
		this.calendarwithcourses = calendarwithcourses;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "coursecalendar")
	public Set<Orderpublic> getOrderpublics() {
		return this.orderpublics;
	}

	public void setOrderpublics(Set<Orderpublic> orderpublics) {
		this.orderpublics = orderpublics;
	}

}
