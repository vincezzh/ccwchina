package com.ccw.bean;

// Generated Aug 28, 2012 11:30:32 PM by Hibernate Tools 3.2.2.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Coursebranchtype generated by hbm2java
 */
@Entity
@Table(name = "coursebranchtype", catalog = "ccwchina", uniqueConstraints = @UniqueConstraint(columnNames = "courseBranchTypePath"))
public class Coursebranchtype implements java.io.Serializable {

	private Integer courseBranchTypeId;
	private Coursetrunktype coursetrunktype;
	private String courseBranchTypeNameKey;
	private String flag;
	private String avaliable;
	private String courseBranchTypePath;
	private Set<Course> courses = new HashSet<Course>(0);
	private Set<Coursecalendar> coursecalendars = new HashSet<Coursecalendar>(0);

	public Coursebranchtype() {
	}

	public Coursebranchtype(Coursetrunktype coursetrunktype,
			String courseBranchTypeNameKey, String flag, String avaliable,
			String courseBranchTypePath, Set<Course> courses,
			Set<Coursecalendar> coursecalendars) {
		this.coursetrunktype = coursetrunktype;
		this.courseBranchTypeNameKey = courseBranchTypeNameKey;
		this.flag = flag;
		this.avaliable = avaliable;
		this.courseBranchTypePath = courseBranchTypePath;
		this.courses = courses;
		this.coursecalendars = coursecalendars;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "courseBranchTypeId", unique = true, nullable = false)
	public Integer getCourseBranchTypeId() {
		return this.courseBranchTypeId;
	}

	public void setCourseBranchTypeId(Integer courseBranchTypeId) {
		this.courseBranchTypeId = courseBranchTypeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "courseTrunkTypeId")
	public Coursetrunktype getCoursetrunktype() {
		return this.coursetrunktype;
	}

	public void setCoursetrunktype(Coursetrunktype coursetrunktype) {
		this.coursetrunktype = coursetrunktype;
	}

	@Column(name = "courseBranchTypeNameKey", length = 100)
	public String getCourseBranchTypeNameKey() {
		return this.courseBranchTypeNameKey;
	}

	public void setCourseBranchTypeNameKey(String courseBranchTypeNameKey) {
		this.courseBranchTypeNameKey = courseBranchTypeNameKey;
	}

	@Column(name = "flag", length = 45)
	public String getFlag() {
		return this.flag;
	}

	public void setFlag(String flag) {
		this.flag = flag;
	}

	@Column(name = "avaliable", length = 45)
	public String getAvaliable() {
		return this.avaliable;
	}

	public void setAvaliable(String avaliable) {
		this.avaliable = avaliable;
	}

	@Column(name = "courseBranchTypePath", unique = true, length = 45)
	public String getCourseBranchTypePath() {
		return this.courseBranchTypePath;
	}

	public void setCourseBranchTypePath(String courseBranchTypePath) {
		this.courseBranchTypePath = courseBranchTypePath;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "coursebranchtype")
	public Set<Course> getCourses() {
		return this.courses;
	}

	public void setCourses(Set<Course> courses) {
		this.courses = courses;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "coursebranchtype")
	public Set<Coursecalendar> getCoursecalendars() {
		return this.coursecalendars;
	}

	public void setCoursecalendars(Set<Coursecalendar> coursecalendars) {
		this.coursecalendars = coursecalendars;
	}

}
